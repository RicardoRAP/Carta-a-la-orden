# Generated by Django 4.2 on 2023-04-11 23:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import website.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProfileUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Último inicio de sesión')),
                ('username', models.CharField(default=None, max_length=200, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Primer nombre')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Apellido')),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message='Coloque un número de teléfono válido.', regex='^\\+?\\d{9,15}$')], verbose_name='Número de télefono')),
                ('profile_img', models.ImageField(blank=True, default='restaurants/profile.png', null=True, upload_to=website.models.ProfileUser.img_upload_to, verbose_name='Foto del perfil')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Cuenta activa')),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BrandOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_restaurant', models.BooleanField(default=False, null=True)),
                ('brand_name', models.CharField(max_length=300, null=True, verbose_name='Nombre de la sucursal')),
                ('start_schedule', models.TimeField(blank=True, null=True, verbose_name='Horario de apertura')),
                ('end_schedule', models.TimeField(blank=True, null=True, verbose_name='Horario de cierre')),
                ('pick_up', models.BooleanField(blank=True, null=True, verbose_name='Pick-up')),
                ('my_delivery', models.BooleanField(blank=True, null=True, verbose_name='Delivery propio')),
                ('external_delivery', models.BooleanField(blank=True, null=True, verbose_name='Servicio de delivery externo')),
                ('others_services', models.BooleanField(blank=True, null=True, verbose_name='Otros tipos de servicios')),
                ('delivery', models.TextField(blank=True, default=None, null=True, verbose_name='Servicios externos')),
                ('state', models.CharField(max_length=100, null=True, verbose_name='Estado')),
                ('city', models.CharField(max_length=100, null=True, verbose_name='Ciudad')),
                ('parish', models.CharField(max_length=100, null=True, verbose_name='Parroquia')),
                ('avenue', models.CharField(blank=True, max_length=100, null=True, verbose_name='Avenida')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Calle')),
                ('full_address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Dirección completa')),
                ('active', models.BooleanField(default=False, null=True, verbose_name='¿Esta operativa la sucursal?')),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dish_name', models.CharField(max_length=500, null=True, verbose_name='Nombre del platillo')),
                ('description', models.TextField(null=True, verbose_name='Descipción del platillo')),
                ('price', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Precio del platillo')),
                ('tags', models.TextField(blank=True, null=True, verbose_name='Etiquetas del platillo')),
                ('amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Cantidad disponible')),
                ('active', models.BooleanField(default=False, null=True, verbose_name='Mostrar platillo')),
                ('date_modify', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_name', models.CharField(max_length=200, null=True)),
                ('promo', models.BooleanField(default=False, null=True)),
                ('discount', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('imagen', models.ImageField(null=True, upload_to=website.models.Menu.img_upload_to)),
                ('imagen_promo', models.ImageField(blank=True, null=True, upload_to=website.models.Menu.img_upload_to)),
                ('active', models.BooleanField(default=False, null=True, verbose_name='Publicar menú')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('profileuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, max_length=300, null=True, unique=True, verbose_name='Nombre del restaurante')),
                ('plan', models.CharField(blank=True, choices=[('Plan Básico', 'Plan Básico'), ('Plan Plata', 'Plan Plata'), ('Plan Oro', 'Plan Oro'), ('Plan Platino', 'Plan Platino')], max_length=200, null=True)),
                ('start_schedule', models.TimeField(blank=True, null=True, verbose_name='Horario de apertura')),
                ('end_schedule', models.TimeField(blank=True, null=True, verbose_name='Horario de cierre')),
                ('pick_up', models.BooleanField(blank=True, null=True, verbose_name='Pick-up')),
                ('my_delivery', models.BooleanField(blank=True, null=True, verbose_name='Delivery propio')),
                ('external_delivery', models.BooleanField(blank=True, null=True, verbose_name='Servicio de delivery externo')),
                ('others_services', models.BooleanField(blank=True, null=True, verbose_name='Otros tipos de servicios')),
                ('delivery', models.TextField(blank=True, default=None, null=True, verbose_name='Servicios externos')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='Estado')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad')),
                ('parish', models.CharField(blank=True, max_length=100, null=True, verbose_name='Parroquia')),
                ('avenue', models.CharField(blank=True, max_length=100, null=True, verbose_name='Avenida')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Calle')),
                ('full_address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Dirección completa')),
            ],
            options={
                'abstract': False,
            },
            bases=('website.profileuser',),
        ),
        migrations.CreateModel(
            name='MenuDish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dish', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='website.dish')),
                ('menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='website.menu')),
            ],
        ),
        migrations.CreateModel(
            name='MenuBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='website.brandoffice')),
                ('menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='website.menu')),
            ],
        ),
        migrations.AddField(
            model_name='menu',
            name='brands',
            field=models.ManyToManyField(blank=True, related_name='menubrands', through='website.MenuBrand', to='website.brandoffice'),
        ),
        migrations.AddField(
            model_name='menu',
            name='dishes',
            field=models.ManyToManyField(related_name='menudishes', through='website.MenuDish', to='website.dish'),
        ),
        migrations.CreateModel(
            name='ImgDish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(null=True, upload_to=website.models.ImgDish.img_upload_to)),
                ('select', models.BooleanField(default=True, null=True)),
                ('order', models.PositiveIntegerField(default=None, null=True)),
                ('folder', models.TextField(editable=False, null=True)),
                ('date_upload', models.DateTimeField(default=django.utils.timezone.now, editable=False, null=True)),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.dish')),
            ],
        ),
        migrations.AddField(
            model_name='menu',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.restaurant'),
        ),
        migrations.AddField(
            model_name='dish',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.restaurant'),
        ),
        migrations.AddField(
            model_name='brandoffice',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.restaurant'),
        ),
    ]
